name: Weekly Twitter Sentiment Report

on:
  schedule:
    # every Monday at 08:30 UTC
    - cron: '30 8 * * MON'
  workflow_dispatch:
    inputs:
      send_email:
        description: 'Email the PDF via Mailjet? (true/false)'
        required: false
        default: 'false'
      week_start:
        description: 'Override start date (YYYY-MM-DD). Leave blank for auto last week.'
        required: false
        default: ''

jobs:
  build-report:
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout repo
      - uses: actions/checkout@v4

      # 2) System libraries required by some R packages + pagedown + RPostgres
      - name: Install system libraries
        run: |
          sudo apt-get update -y
          sudo apt-get install -y --no-install-recommends \
            ghostscript \
            libssl-dev libxml2-dev libcurl4-openssl-dev \
            libfontconfig1-dev libfreetype6-dev libharfbuzz-dev libfribidi-dev \
            libpng-dev libtiff5-dev \
            libglpk-dev \
            libpq-dev

      # 3) Install pandoc (needed by rmarkdown)
      - uses: r-lib/actions/setup-pandoc@v2
        with:
          pandoc-version: '3.1.12.2'   # omit to use default

      # 4) Set up R
      - uses: r-lib/actions/setup-r@v2
        with:
          use-public-rspm: true

      # 5) Install a headless Chrome and expose its path
      - name: Install headless Chrome
        uses: browser-actions/setup-chrome@v2
        with:
          install-dependencies: true
          chrome-version: stable
      - run: echo "CHROME_BIN=$CHROME_PATH" >> "$GITHUB_ENV"

      # 6) Run the weekly pipeline
      - name: Run weekly sentiment script
        env:
          # Supabase storage (for upload)
          SUPABASE_URL:          ${{ secrets.SUPABASE_URL }}
          SUPABASE_SERVICE_ROLE: ${{ secrets.SUPABASE_SERVICE_ROLE }}

          # Mailjet (only used if SEND_EMAIL=true)
          MJ_API_KEY:            ${{ secrets.MJ_API_KEY }}
          MJ_API_SECRET:         ${{ secrets.MJ_API_SECRET }}
          MAIL_FROM:             ${{ vars.MAIL_FROM }}
          MAIL_TO:               ${{ vars.MAIL_TO }}

          # Controls
          SEND_EMAIL:            ${{ inputs.send_email || 'false' }}
          WEEK_START:            ${{ inputs.week_start || '' }}
        run: |
          Rscript run_weekly_sentiment.R

      # 7) Keep the generated files as CI artifacts
      - name: Upload report artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: weekly-sentiment-report
          path: |
            *.pdf
            *.html
